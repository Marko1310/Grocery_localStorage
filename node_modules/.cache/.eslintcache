[{"/Users/marko/Documents/programiranje/Projects/Grocery_Loacal/src/App.tsx":"1","/Users/marko/Documents/programiranje/Projects/Grocery_Loacal/src/context/GlobalContext.tsx":"2","/Users/marko/Documents/programiranje/Projects/Grocery_Loacal/src/components/submit/Submit.tsx":"3","/Users/marko/Documents/programiranje/Projects/Grocery_Loacal/src/components/alert/Alert.tsx":"4","/Users/marko/Documents/programiranje/Projects/Grocery_Loacal/src/components/list/List.tsx":"5","/Users/marko/Documents/programiranje/Projects/Grocery_Loacal/src/components/navbar/Navbar.tsx":"6","/Users/marko/Documents/programiranje/Projects/Grocery_Loacal/src/components/grocerie/Grocerie.tsx":"7","/Users/marko/Documents/programiranje/Projects/Grocery_Loacal/src/index.tsx":"8"},{"size":702,"mtime":1684099245218,"results":"9","hashOfConfig":"10"},{"size":1029,"mtime":1684145845741,"results":"11","hashOfConfig":"10"},{"size":1195,"mtime":1684140019180,"results":"12","hashOfConfig":"10"},{"size":420,"mtime":1684137207512,"results":"13","hashOfConfig":"10"},{"size":840,"mtime":1684140735327,"results":"14","hashOfConfig":"10"},{"size":326,"mtime":1684137766359,"results":"15","hashOfConfig":"10"},{"size":1898,"mtime":1684137495202,"results":"16","hashOfConfig":"10"},{"size":355,"mtime":1679217312077,"results":"17","hashOfConfig":"10"},{"filePath":"18","messages":"19","suppressedMessages":"20","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"21"},"1he1ofz",{"filePath":"22","messages":"23","suppressedMessages":"24","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"25","messages":"26","suppressedMessages":"27","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"28","messages":"29","suppressedMessages":"30","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"31","messages":"32","suppressedMessages":"33","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"34","messages":"35","suppressedMessages":"36","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"37","messages":"38","suppressedMessages":"39","errorCount":1,"fatalErrorCount":1,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"source":"40","usedDeprecatedRules":"21"},{"filePath":"41","messages":"42","suppressedMessages":"43","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"/Users/marko/Documents/programiranje/Projects/Grocery_Loacal/src/App.tsx",[],[],[],"/Users/marko/Documents/programiranje/Projects/Grocery_Loacal/src/context/GlobalContext.tsx",[],[],"/Users/marko/Documents/programiranje/Projects/Grocery_Loacal/src/components/submit/Submit.tsx",[],[],"/Users/marko/Documents/programiranje/Projects/Grocery_Loacal/src/components/alert/Alert.tsx",["44"],[],"/Users/marko/Documents/programiranje/Projects/Grocery_Loacal/src/components/list/List.tsx",[],[],"/Users/marko/Documents/programiranje/Projects/Grocery_Loacal/src/components/navbar/Navbar.tsx",[],[],"/Users/marko/Documents/programiranje/Projects/Grocery_Loacal/src/components/grocerie/Grocerie.tsx",["45"],[],"// react\nimport React, { useContext, useRef, useState } from \"react\";\n\n// css\nimport \"./Grocerie.css\";\n\n// context\nimport { GlobalContext } from \"../../context/GlobalContext\";\n\ntype GrocerieProps = {\n  grocerie: \n}\n\nconst Grocerie = ({ grocerie }) => {\n  // states\n  const [content, setContent] = useState(grocerie.title);\n  // state -> is the component edited or not\n  const [edit, setEdit] = useState(false);\n\n  // context\n  const { grocerieList, setGrocerieList } = useContext(GlobalContext);\n\n  // function to delete item\n  const deleteItem = function (id) {\n    setGrocerieList(grocerieList.filter((el) => el.id !== id));\n  };\n\n  // function to edit each field\n  const handleEdit = function (content) {\n    let newGrocerieList;\n    if (!edit) {\n      inputEl.current.focus();\n    } else {\n      newGrocerieList = grocerieList.map((el) => {\n        if (el.id === grocerie.id) {\n          el.title = content;\n        }\n        return el;\n      });\n      setGrocerieList(newGrocerieList);\n    }\n    setEdit((prevState) => !prevState);\n  };\n\n  // useref to focus on edit field\n  const inputEl = useRef(null);\n\n  return (\n    <li className=\"grocery-list-item\">\n      <input\n        ref={inputEl}\n        type=\"text\"\n        name=\"grocery\"\n        placeholder={grocerie.title}\n        value={content}\n        readOnly={!edit}\n        className={edit ? \"edit-form\" : \"grocerie-title\"}\n        onChange={(e) => setContent(e.target.value)}\n      ></input>\n      <div className=\"submit-buttons\">\n        <button\n          className={edit ? `submit-btn confirm` : `submit-btn edit`}\n          onClick={() => handleEdit(content)}\n        >\n          {edit ? \"Confirm\" : \"Edit\"}\n        </button>\n\n        <button\n          className=\"submit-btn delete\"\n          onClick={() => deleteItem(grocerie.id)}\n        >\n          Delete\n        </button>\n      </div>\n    </li>\n  );\n};\n\nexport default Grocerie;\n","/Users/marko/Documents/programiranje/Projects/Grocery_Loacal/src/index.tsx",[],[],{"ruleId":"46","severity":1,"message":"47","line":15,"column":6,"nodeType":"48","endLine":15,"endColumn":8,"suggestions":"49"},{"ruleId":null,"fatal":true,"severity":2,"message":"50","line":12,"column":0},"react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'removeAlert'. Either include it or remove the dependency array. If 'removeAlert' changes too often, find the parent component that defines it and wrap that definition in useCallback.","ArrayExpression",["51"],"Parsing error: Type expected.",{"desc":"52","fix":"53"},"Update the dependencies array to be: [removeAlert]",{"range":"54","text":"55"},[324,326],"[removeAlert]"]