{"ast":null,"code":"var _jsxFileName = \"/Users/marko/Documents/programiranje/Projects/Grocery_Loacal/src/App.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from \"react\";\nimport List from \"./components/list/List\";\nimport Alert from \"./components/alert/Alert\";\nimport Navbar from \"./components/navbar/Navbar\";\nimport Submit from \"./components/submit/Submit\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction App() {\n  _s();\n  // state for input field\n  const [input, setInput] = useState(\"\");\n\n  // state for edit field\n  const [inputEdit, setInputEdit] = useState(\"\");\n\n  // state for list of groceries\n  const [grocerieList, setGrocerieList] = useState(() => {\n    return JSON.parse(localStorage.getItem(\"groceries\")) || [];\n  });\n  useEffect(() => {\n    localStorage.setItem(\"groceries\", JSON.stringify(grocerieList));\n  }, [grocerieList]);\n\n  // state for enable/disable buttons\n  const [currentBtn, setCurrentBtn] = useState(false);\n\n  //state for current ID\n  const [currentID, setCurrentID] = useState(\"\");\n\n  //state for showing the alert\n  const [showAlert, setShowAlert] = useState(null);\n\n  // function to update the input state field when entering the que\n  const changeInput = function (e) {\n    setInput(e.target.value);\n  };\n\n  // function to update the edit input state\n  const changeInputEdit = function (e) {\n    setInputEdit(e.target.value);\n  };\n\n  // function to add groceries\n  const addGrocerie = function () {\n    const id = Math.random();\n    if (input !== \"\") {\n      setShowAlert(false);\n      setGrocerieList(prevGrocerieList => {\n        return [...prevGrocerieList, {\n          title: input,\n          id: id,\n          edit: false\n        }];\n      });\n    } else {\n      setShowAlert(true);\n    }\n    setInput(\"\");\n  };\n\n  // function to remove all groceries\n  const emptyList = function () {\n    setGrocerieList([]);\n  };\n\n  // function to delete item\n  const deleteItem = function (id) {\n    // filter items in array that id is not equal to selected id\n    setGrocerieList(grocerieList.filter(el => el.id !== id));\n  };\n\n  // change the state propertie of edit -> true/false by removing the element from the array and replacing with the new\n  const changeEdit = function (id) {\n    const grocerieCopy = [...grocerieList];\n    for (let i = 0; i < grocerieCopy.length; i++) {\n      if (id === grocerieCopy[i].id) {\n        if (grocerieCopy[i].edit === true) {\n          grocerieCopy.splice(i, 1, {\n            ...grocerieList[i],\n            title: inputEdit,\n            edit: false\n          });\n        } else grocerieCopy.splice(i, 1, {\n          ...grocerieList[i],\n          edit: true\n        });\n      }\n    }\n    setGrocerieList(grocerieCopy);\n    setInputEdit(\"\");\n    setCurrentID(id);\n    setCurrentBtn(prevState => !prevState);\n  };\n\n  // function to remove alert\n  const removeALert = function () {\n    setShowAlert(false);\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(Navbar, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 99,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"main-container\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"alert-container\",\n        children: showAlert && /*#__PURE__*/_jsxDEV(Alert, {\n          removeALert: removeALert\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 102,\n          columnNumber: 25\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 101,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Submit, {\n        changeInput: changeInput,\n        addGrocerie: addGrocerie,\n        input: input,\n        grocerieList: grocerieList\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 104,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(List, {\n        grocerieList: grocerieList,\n        deleteItem: deleteItem,\n        emptyList: emptyList,\n        changeEdit: changeEdit,\n        changeInput: changeInput,\n        inputEdit: inputEdit,\n        changeInputEdit: changeInputEdit,\n        currentBtn: currentBtn,\n        currentID: currentID\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 110,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 100,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 98,\n    columnNumber: 5\n  }, this);\n}\n_s(App, \"y8rGGT7+lPe+5zu1EQon6YRbUEE=\");\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["React","useState","useEffect","List","Alert","Navbar","Submit","App","input","setInput","inputEdit","setInputEdit","grocerieList","setGrocerieList","JSON","parse","localStorage","getItem","setItem","stringify","currentBtn","setCurrentBtn","currentID","setCurrentID","showAlert","setShowAlert","changeInput","e","target","value","changeInputEdit","addGrocerie","id","Math","random","prevGrocerieList","title","edit","emptyList","deleteItem","filter","el","changeEdit","grocerieCopy","i","length","splice","prevState","removeALert"],"sources":["/Users/marko/Documents/programiranje/Projects/Grocery_Loacal/src/App.js"],"sourcesContent":["import React, { useState, useEffect } from \"react\";\nimport List from \"./components/list/List\";\nimport Alert from \"./components/alert/Alert\";\nimport Navbar from \"./components/navbar/Navbar\";\nimport Submit from \"./components/submit/Submit\";\n\nfunction App() {\n  // state for input field\n  const [input, setInput] = useState(\"\");\n\n  // state for edit field\n  const [inputEdit, setInputEdit] = useState(\"\");\n\n  // state for list of groceries\n  const [grocerieList, setGrocerieList] = useState(() => {\n    return JSON.parse(localStorage.getItem(\"groceries\")) || [];\n  });\n\n  useEffect(() => {\n    localStorage.setItem(\"groceries\", JSON.stringify(grocerieList));\n  }, [grocerieList]);\n\n  // state for enable/disable buttons\n  const [currentBtn, setCurrentBtn] = useState(false);\n\n  //state for current ID\n  const [currentID, setCurrentID] = useState(\"\");\n\n  //state for showing the alert\n  const [showAlert, setShowAlert] = useState(null);\n\n  // function to update the input state field when entering the que\n  const changeInput = function (e) {\n    setInput(e.target.value);\n  };\n\n  // function to update the edit input state\n  const changeInputEdit = function (e) {\n    setInputEdit(e.target.value);\n  };\n\n  // function to add groceries\n  const addGrocerie = function () {\n    const id = Math.random();\n\n    if (input !== \"\") {\n      setShowAlert(false);\n      setGrocerieList((prevGrocerieList) => {\n        return [...prevGrocerieList, { title: input, id: id, edit: false }];\n      });\n    } else {\n      setShowAlert(true);\n    }\n    setInput(\"\");\n  };\n\n  // function to remove all groceries\n  const emptyList = function () {\n    setGrocerieList([]);\n  };\n\n  // function to delete item\n  const deleteItem = function (id) {\n    // filter items in array that id is not equal to selected id\n    setGrocerieList(grocerieList.filter((el) => el.id !== id));\n  };\n\n  // change the state propertie of edit -> true/false by removing the element from the array and replacing with the new\n  const changeEdit = function (id) {\n    const grocerieCopy = [...grocerieList];\n    for (let i = 0; i < grocerieCopy.length; i++) {\n      if (id === grocerieCopy[i].id) {\n        if (grocerieCopy[i].edit === true) {\n          grocerieCopy.splice(i, 1, {\n            ...grocerieList[i],\n            title: inputEdit,\n            edit: false,\n          });\n        } else\n          grocerieCopy.splice(i, 1, {\n            ...grocerieList[i],\n            edit: true,\n          });\n      }\n    }\n    setGrocerieList(grocerieCopy);\n    setInputEdit(\"\");\n    setCurrentID(id);\n    setCurrentBtn((prevState) => !prevState);\n  };\n\n  // function to remove alert\n  const removeALert = function () {\n    setShowAlert(false);\n  };\n\n  return (\n    <div>\n      <Navbar />\n      <div className=\"main-container\">\n        <div className=\"alert-container\">\n          {showAlert && <Alert removeALert={removeALert} />}\n        </div>\n        <Submit\n          changeInput={changeInput}\n          addGrocerie={addGrocerie}\n          input={input}\n          grocerieList={grocerieList}\n        />\n        <List\n          grocerieList={grocerieList}\n          deleteItem={deleteItem}\n          emptyList={emptyList}\n          changeEdit={changeEdit}\n          changeInput={changeInput}\n          inputEdit={inputEdit}\n          changeInputEdit={changeInputEdit}\n          currentBtn={currentBtn}\n          currentID={currentID}\n        />\n      </div>\n    </div>\n  );\n}\n\nexport default App;\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}